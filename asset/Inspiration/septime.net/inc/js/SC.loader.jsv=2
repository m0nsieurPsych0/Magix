/**
 * SC / main / loader
 */
var SC = (function () {
    var queue = false;
    var queueSound = false;

    function initQueue() {
        queue = new createjs.LoadQueue();
    }

    function addToQueue(el) {
        if (!queue) initQueue();
        queue.loadFile(el);
        //console.log(queue);
    }

    function addMultipleToQueue(el, type) {
        if (type == true) {
            // MEDIA SOUND
            // console.log("Sound : " + type);
            createjs.FlashPlugin.BASE_PATH = "inc/js/vendor/soundjs/";
            //createjs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioplugin, createjs.FlashPlugin]);
            //createjs.Sound.registerPlugins(createjs.FlashPlugin);

            if (is_FF_25) {
                // on donne uniquement le ogg pour Firefox (car l'api Webaudioplugin marche pas bien !!)
                var manifest = [
                    {src: el[1]['src'], id: el[0]['id']}
                ];
            } else {
                // on donne le mp3 et le ogg pour le reste
                var manifest = [
                    {src: el[0]['src'] + '|' + el[1]['src'], id: el[0]['id']}
                ];
            }

            createjs.Sound.registerManifest(manifest);
            //alert('register sound : '+el[0].src+' | '+el[0].id);
            //createjs.Sound.registerSound(el[0].src, el[0].id);
        }
        else {
            // MEDIA OTHER
            if (!queue) initQueue();
            queue.loadManifest(el);
        }
        // console.log(el);
    }

    function addEvent(event, handleComplete, type) {
        if (type == true) {
            // MEDIA SOUND
            createjs.Sound.addEventListener(event, createjs.proxy(handleComplete, (this)));
        } else {
            // MEDIA OTHER
            if (!queue) initQueue();
            queue.addEventListener(event, handleComplete);
        }
        //console.log(queue);
    }

    function getResult(id) {
        var result = queue.getResult(id);
        return result;
        //console.log("Result : "+result);
    }


    /*************************/
    // public
    /*************************/
    this.Loader = {};

    this.Loader.initQueue = initQueue;
    this.Loader.addToQueue = function (el) {
        addToQueue(el);
        //console.log('addToQueue',el);
    };

    this.Loader.addMultipleToQueue = function (el, type) {
        addMultipleToQueue(el, type);
        //console.log('addMultipleToQueue',el);
    };

    this.Loader.addEvent = function (event, handleComplete, type) {
        addEvent(event, handleComplete, type);
        //console.log('addToQueue',el);
    };

    this.Loader.getResult = function (id) {
        return getResult(id);
        //console.log('getResult',id);
    };

    return this;
}).apply(SC);
